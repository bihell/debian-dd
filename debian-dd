#!/bin/bash

# color
underLine='\033[4m'
aoiBlue='\033[36m'
blue='\033[34m'
yellow='\033[33m'
green='\033[32m'
red='\033[31m'
plain='\033[0m'

clear
# 检查是否是 root 用户
if [ "$EUID" -ne 0 ]; then
    echo "Error: Please use the root user to execute this script."
    exit
fi

echo "Welcome to use the Debian DD script by『数码乱炖』"
echo "If you have any questions, please raise an issue. "
echo "GitHub: https://github.com/bihell/debian-dd"
echo "VPS document: https://bigdata.icu/tools/vps.html"
echo "-------------------------------------------------"
echo "Welcome to subscribe to my channel"
echo "youtube：https://www.youtube.com/channel/UCINmrFonh6v0VTyWhudSQ2w"
echo "bilibili：https://space.bilibili.com/88900889"
echo "xigua：https://www.ixigua.com/home/940801951008103"
echo
echo "Supported Versions:"
echo "[1] Debian 12(bookworm)"
echo "[2] Debian 11(bullseye)"
echo "[3] Debian 10(buster)"
read -p "Please select [Default 1]:" version

if [ -z "$version" ]; then
    version=0
fi

if [ "$version" == "0" ] || [ "$version" == "1" ]; then
    debian_version="bookworm"
elif [ "$version" == "2" ]; then
    debian_version="bullseye"
elif [ "$version" == "3" ]; then
    debian_version="buster"
else 
    echo "No correct option entered, ready to exit..."
    sleep 1
    exit
fi
	
echo "Start installing Debian $debian_version..."
echo
echo "Set root password[default random password]:"
read -p "Enter directly to generate a random password" passwd
if [ -z "$passwd" ]; then
# Length of the password
    PASSWORD_LENGTH=12

    # Generate the password
    passwd=$(tr -dc 'A-Za-z0-9' </dev/urandom | head -c $PASSWORD_LENGTH)

    echo "Generated password: ${yellow}$passwd${plain}"
	sleep 1
fi

# Get the device number of the root directory
root_device=$(df / | awk 'NR==2 {print $1}')

# Extract the partition number from the device number
partitionr_root_number=$(echo "$root_device" | grep -oE '[0-9]+$')

mkdir /netboot && cd /netboot
apt install wget -y
wget https://ftp.debian.org/debian/dists/$debian_version/main/installer-amd64/current/images/netboot/debian-installer/amd64/linux
wget https://ftp.debian.org/debian/dists/$debian_version/main/installer-amd64/current/images/netboot/debian-installer/amd64/initrd.gz

apt install net-tools -y

# Get the name of the active network interface
interface=$(ip -o link show | awk '$2 != "lo:" {print substr($2, 1, length($2)-1); exit}')

# Get IP address
ip=$(ifconfig $interface | awk '/inet / {print $2}')

# Get subnet mask
netmask=$(ifconfig $interface | awk '/netmask / {print $4}')

# Get Gateway
gateway=$(ip route | awk '/default/ {print $3}')

echo "Start configuring pre-installed file..."
mkdir temp_initrd
cd temp_initrd
gunzip -c ../initrd.gz | cpio -i

cat << EOF > preseed.cfg
d-i debian-installer/locale string en_US.UTF-8
d-i debian-installer/language string en
d-i debian-installer/country string CN
d-i keyboard-configuration/xkb-keymap select us
d-i passwd/make-user boolean false
d-i passwd/root-password password $passwd
d-i passwd/root-password-again password $passwd
d-i user-setup/allow-password-weak boolean true
d-i netcfg/choose_interface select auto
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually
d-i netcfg/get_ipaddress string $ip
d-i netcfg/get_netmask string $netmask
d-i netcfg/get_gateway string $gateway
d-i netcfg/get_nameservers string 1.1.1.1 8.8.8.8
d-i netcfg/confirm_static boolean true
d-i netcfg/get_hostname string debian
d-i netcfg/get_domain string debian

### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

d-i clock-setup/utc boolean true
d-i clock-setup/ntp boolean true
d-i time/zone string Asia/Shanghai
d-i partman-auto/disk string /dev/[sv]da
d-i partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-basicfilesystems/no_swap boolean false
d-i partman-auto/expert_recipe string                       \
200 1 200 ext4 \
        \$primary{ } \$bootable{ } \
        method{ format } format{ } \
        use_filesystem{ } filesystem{ ext4 } \
        mountpoint{ /boot } \
    . \
201 2 -1 ext4 \
        \$primary{ } \
        method{ format } format{ } \
        use_filesystem{ } filesystem{ ext4 } \
        mountpoint{ / } \
    .
d-i partman-md/confirm_nooverwrite boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
tasksel tasksel/first multiselect minimal
d-i pkgsel/include string openssh-server
d-i pkgsel/update-policy select none
d-i pkgsel/upgrade select none
d-i apt-setup/services-select multiselect
d-i grub-installer/grub2_instead_of_grub_legacy boolean true
d-i grub-installer/only_debian boolean true
d-i grub-installer/bootdev string /dev/[sv]da
d-i preseed/late_command string \
chroot /target sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config;
d-i finish-install/reboot_in_progress note
EOF
find . | cpio -H newc -o | gzip -6 > ../initrd.gz && cd ..
rm -rf temp_initrd 
echo "Configuration complete..."
cat << EOF >> /etc/grub.d/40_custom
menuentry "Digital-Review Debian Installer AMD64" {
    set root="(hd0,$partitionr_root_number)"
    linux /netboot/linux auto=true priority=critical lowmem/low=true preseed/file=/preseed.cfg
    initrd /netboot/initrd.gz
}
EOF

# Modifying the GRUB DEFAULT option
sed -i 's/^GRUB_DEFAULT=.*/GRUB_DEFAULT=2/' /etc/default/grub
# Modify the GRUB TIMEOUT option
sed -i 's/^GRUB_TIMEOUT=.*/GRUB_TIMEOUT=2/' /etc/default/grub

update-grub 

echo -ne "\n[${green}Finish${plain}] Input '${yellow}reboot${plain}' to continue the subsequential installation.\n"
exit 1
